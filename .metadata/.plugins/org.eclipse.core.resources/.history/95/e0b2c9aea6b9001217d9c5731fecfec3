package pt.utl.ist.cm.neartweetclient.sync;

import pt.utl.ist.cm.neartweetEntities.pdu.GenericMessagePDU;
import pt.utl.ist.cm.neartweetEntities.pdu.PDU;
import pt.utl.ist.cm.neartweetEntities.pdu.PDUVisitor;
import pt.utl.ist.cm.neartweetEntities.pdu.PollVotePDU;
import pt.utl.ist.cm.neartweetEntities.pdu.PublishPollPDU;
import pt.utl.ist.cm.neartweetEntities.pdu.RegisterPDU;
import pt.utl.ist.cm.neartweetEntities.pdu.ReplyPDU;
import pt.utl.ist.cm.neartweetEntities.pdu.SpamVotePDU;
import pt.utl.ist.cm.neartweetEntities.pdu.TweetPDU;
import pt.utl.ist.cm.neartweetclient.core.ClientsManager;
import pt.utl.ist.cm.neartweetclient.core.MemCacheProvider;
import pt.utl.ist.cm.neartweetclient.core.SpamManager;
import pt.utl.ist.cm.neartweetclient.utils.Actions;
import pt.utl.ist.cm.neartweetclient.utils.UiMessages;
import android.content.Context;
import android.content.Intent;
import android.util.Log;

public class PDUHandler extends PDUVisitor {

	private Context context;
	
	public PDUHandler(Context c) {
		this.context = c;
	}

	public void processGenericMessagePDU(GenericMessagePDU pdu) {
		Intent intent = createGenericMessageIntent(pdu);
//		if (this.context != null) {
//			Log.i("DEBUG", "BroadCasting Message");
//			context.sendBroadcast(intent);
//			Connection.getInstance().broadcastPDU(pdu);
//		} else {
//			Log.i("DEGUB", "CONTEXT WAS EMPTY ON GENERIC MESSAGE PDU");
//		}
		genericProcess(pdu, intent);
	}

	private Intent createGenericMessageIntent(GenericMessagePDU pdu) {
		Intent intent = new Intent();
		intent.setAction(Actions.REGISTER_CONFIRMATION);
		intent.putExtra(Actions.SUCCESS_LOGIN, pdu.getResponse());
		return intent;
	}

	@Override
	public void processPollVotePDU(PollVotePDU pdu) {
		Log.i("DEBUG", "received a pollVote [ userId: " + pdu.getUserId() + ", option: " + pdu.getOptionPosition() + "]" );

		if(!SpamManager.isBlocked(pdu.getUserId())){
			MemCacheProvider.addTweet(pdu.getId(), pdu);
			MemCacheProvider.registerPollConversation(pdu);

			Intent intent = createPollVoteIntent(pdu);
//			if (this.context != null) {
//				Log.i("DEBUG", "BroadCasting Message");
//				context.sendBroadcast(intent);
//				Connection.getInstance().broadcastPDU(pdu);
//			}
			genericProcess(pdu, intent);
		}

	}

	private Intent createPollVoteIntent(PollVotePDU pdu) {
		Intent intent = new Intent();
		intent.setAction(Actions.POLL_VOTE);
		intent.putExtra(Actions.POLL_VOTE_DATA, pdu.getId());
		return intent;
	}

	@Override
	public void processPublishPollPDU(PublishPollPDU pdu) {
		if(!SpamManager.isBlocked(pdu.getUserId())){
			Intent intent = createPublishPollIntent(pdu);
//			if (this.context != null) {
				Log.i(UiMessages.NEARTWEET_TAG, "processPublishPollPdu: " + pdu);
//				MemCacheProvider.addTweet(pdu.getId(), pdu);
//				this.context.sendBroadcast(intent);
//				Connection.getInstance().broadcastPDU(pdu);
//			}
				genericProcess(pdu, intent);
				MemCacheProvider.registerInboxMessage(pdu);
				MemCacheProvider.registerPollConversation(pdu);
		}
	}

	private Intent createPublishPollIntent(PublishPollPDU pdu) {
		Intent intent = new Intent();
		intent.setAction(Actions.BROADCAST_TWEET);
		intent.putExtra(Actions.TWEET_DATA, pdu.getId());
		return intent;
	}

	@Override
	public void processRegisterPDU(RegisterPDU pdu) {
		ClientsManager.registerUser(pdu.getUserId());
//		if (this.context != null) {
//			MemCacheProvider.addTweet(pdu.getId(), pdu);
		Intent intent = createRegisterIntent(pdu);
//			this.context.sendBroadcast(intent);
//			Connection.getInstance().broadcastPDU(pdu);
			genericProcess(pdu, intent);
//		}
	}

	private Intent createRegisterIntent(RegisterPDU pdu) {
		Intent intent = new Intent();
			intent.setAction(Actions.BROADCAST_NEW_USER);
			intent.putExtra(Actions.NEW_USER_DATA, pdu.getUserId());
		return intent;
	}

	@Override
	public void processReplyPDU(ReplyPDU pdu) {
		if(!SpamManager.isBlocked(pdu.getUserId())){
			Intent intent = createReplyIntent(pdu);
//			if (this.context != null) {
//				MemCacheProvider.addTweet(pdu.getId(), pdu);
			genericProcess(pdu, intent);
				MemCacheProvider.registerTweetConversation(pdu);
//				this.context.sendBroadcast(intent);
//				Connection.getInstance().broadcastPDU(pdu);
//			}
		}

	}

	private Intent createReplyIntent(ReplyPDU pdu) {
		Intent intent = new Intent();
		intent.setAction(Actions.BROADCAST_TWEET);
		intent.putExtra(Actions.TWEET_DATA, pdu.getId());
		return intent;
	}

	@Override
	public void processSpamVotePDU(SpamVotePDU pdu) {
		if(!SpamManager.isBlocked(pdu.getUserId())){
			Log.i("DEBUG", "New SPAM VOTE FOR USER " + pdu.getUserId());
			SpamManager.registerSpamVote(pdu);
			if(!SpamManager.isBlocked(pdu.getTargetUserId())) {
				Intent intent = createSpamVoteIntent(pdu);
//				this.context.sendBroadcast(intent);
//				Connection.getInstance().broadcastPDU(pdu);
				genericProcess(pdu, intent);
			}
		}
	}

	private Intent createSpamVoteIntent(SpamVotePDU pdu) {
		Intent intent = new Intent();
		intent.setAction(Actions.BROADCAST_SPAMMER_BLOCKED);
		intent.putExtra(Actions.SPAMMER_ID_DATA, pdu.getTargetUserId());
		return intent;
	}

	@Override
	public void processTweetPDU(TweetPDU pdu) {
		if(!SpamManager.isBlocked(pdu.getUserId())){
			Intent intent = createTweetIntent(pdu);
			
			genericProcess(pdu, intent);
//			if (this.context != null) {
//				MemCacheProvider.addTweet(pdu.getId(), pdu);
				MemCacheProvider.registerInboxMessage(pdu);
				MemCacheProvider.registerTweetConversation(pdu);
//				this.context.sendBroadcast(intent);
//				Connection.getInstance().broadcastPDU(pdu);
//			}
		}
	}

	private Intent createTweetIntent(TweetPDU pdu) {
		Intent intent = new Intent();
		intent.setAction(Actions.BROADCAST_TWEET);
		intent.putExtra(Actions.TWEET_DATA, pdu.getId());
		return intent;
	}
	
	private void genericProcess(PDU pdu, Intent intent) {
		if (this.context != null) {
			MemCacheProvider.addTweet(pdu.getId(), pdu);
			Connection.getInstance().broadcastPDU(pdu);
			this.context.sendBroadcast(intent);
		}
	}

}
