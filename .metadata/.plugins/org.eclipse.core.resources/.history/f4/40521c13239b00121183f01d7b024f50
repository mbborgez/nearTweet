package pt.utl.ist.cm.neartweetclient.connectionTasks;

import pt.utl.ist.cm.neartweetEntities.pdu.PDU;
import pt.utl.ist.cm.neartweetclient.exceptions.NotConnectedException;
import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.os.Binder;
import android.os.IBinder;
import android.util.Log;

public class AsynchReceiveService extends Service {

	public class LocalBinder extends Binder {
		AsynchReceiveService getService() {
            return AsynchReceiveService.this;
        }
    }
	
	private final IBinder mBinder = new LocalBinder();

	private void receivePDU(){
		if(!ConnectionStatus.getInstance().isConnected()){
			throw new NotConnectedException("Trying to receive before connecting");
		}
	
		while(ConnectionStatus.getInstance().isConnected()){
			ClientPDUVisitor pduVisitor = new ClientPDUVisitor(context);
			PDU pdu = ConnectionStatus.getInstance().receivePDU();
			Log.i(this.getClass().toString(), "PDU received " + pdu);
			//TODO the step of handling the received pdu should be done in a new thread.
			pdu.accept(pduVisitor);
		}
	}

	@Override
    public void onCreate() {
        mNM = (NotificationManager)getSystemService(NOTIFICATION_SERVICE);

        // Display a notification about us starting.  We put an icon in the status bar.
        showNotification();
    }
	
	@Override
	public IBinder onBind(Intent intent) {
		// TODO Auto-generated method stub
		return null;
	}

		

}