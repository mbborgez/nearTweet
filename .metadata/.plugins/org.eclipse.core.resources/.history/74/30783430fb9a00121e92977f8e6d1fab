package pt.utl.ist.cm.neartweetclient.connectionTasks;

import java.io.IOException;
import java.net.UnknownHostException;

import pt.utl.ist.cm.neartweetEntities.pdu.PDU;
import android.content.Context;
import android.util.Log;

public class AsynchReceiveTask implements Runnable {

	private Context context;

	public AsynchReceiveTask(Context context){
		this.context = context;
	}

	@Override
	public void run() {

		while(!ConnectionStatus.getInstance().isConnected()){
			waitForConnection();
		}

		while(ConnectionStatus.getInstance().isConnected()){
			ClientPDUVisitor pduVisitor = new ClientPDUVisitor(context);
			PDU pdu = ConnectionStatus.getInstance().receivePDU();
			Log.i(this.getClass().toString(), "PDU received " + pdu);
			pdu.accept(pduVisitor);
		}
	}

	private void waitForConnection() {
		try {
			Thread.sleep(500); /* Wait for the connection */
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	private synchronized void connect() {
		try {
			ConnectionStatus.getInstance().connect(Constants.SERVER_ADDRESS, Constants.SERVER_PORT);
		} catch (UnknownHostException e) {
			e.printStackTrace();
			Log.e(this.getClass().toString(), "Error connecting");
		} catch (IOException e) {
			e.printStackTrace();
			Log.e(this.getClass().toString(), "Error connecting");
		}
	}
}